diff --git a/var/spack/repos/builtin/packages/libzmq/package.py b/var/spack/repos/builtin/packages/libzmq/package.py
index dac309b699..07f5ef4ac6 100644
--- a/var/spack/repos/builtin/packages/libzmq/package.py
+++ b/var/spack/repos/builtin/packages/libzmq/package.py
@@ -64,7 +64,6 @@ class Libzmq(AutotoolsPackage):
     depends_on("libunwind", when="+libunwind")
 
     conflicts("%gcc@8:", when="@:4.2.2")
-    conflicts("%gcc@11:", when="@:4.3.2")
 
     # Fix aggressive compiler warning false positive
     patch(
@@ -80,6 +79,9 @@ class Libzmq(AutotoolsPackage):
         when="@4.3.4 %gcc@12:",
     )
 
+    # Gcc12 patch fix
+    patch('https://github.com/zeromq/libzmq/commit/a01d259db372bff5e049aa966da4efce7259af67.patch?full_index=1', sha256='edca864cba914481a5c97d2e975ba64ca1d2fbfc0044e9a78c48f1f7b2bedb6f', when='@4.3.2:4.3.4 %gcc@12:')
+
     def url_for_version(self, version):
         if version <= Version("4.1.4"):
             url = "http://download.zeromq.org/zeromq-{0}.tar.gz"
diff --git a/var/spack/repos/builtin/packages/openblas/package.py b/var/spack/repos/builtin/packages/openblas/package.py
index 099d00fb..0b247175 100644
--- a/var/spack/repos/builtin/packages/openblas/package.py
+++ b/var/spack/repos/builtin/packages/openblas/package.py
@@ -445,12 +445,7 @@ def libs(self):
 
     @property
     def build_targets(self):
-        targets = ["libs", "netlib"]
-
-        # Build shared if variant is set.
-        if "+shared" in self.spec:
-            targets += ["shared"]
-
+        targets = ["all"]
         return self.make_defs + targets
 
     @run_after("build")
diff --git a/var/spack/repos/builtin/packages/rivet/package.py b/var/spack/repos/builtin/packages/rivet/package.py
index 6ea0deb3..7d5c535c 100644
--- a/var/spack/repos/builtin/packages/rivet/package.py
+++ b/var/spack/repos/builtin/packages/rivet/package.py
@@ -18,7 +18,6 @@ class Rivet(AutotoolsPackage):
 
     tags = ["hep"]
 
-    version("3.1.7b", tag="rivet-3.1.7b")
     version("3.1.7", sha256="27c7dbbcb5fd7ee81caf136daf4e960bca0ec255d9fa1abe602f4d430861b27a")
     version("3.1.6", sha256="1cf6ebb6a79d181c441d1d0c7c6d623c423817c61093f36f21adaae23e679090")
     version("3.1.4", sha256="37edc80a2968ce1031589e43ba6b492877ca7901bea38f8bb7536a5c8cf8100d")
diff --git a/var/spack/repos/builtin/packages/gaudi/package.py b/var/spack/repos/builtin/packages/gaudi/package.py
index 3ea72261..d3ac0e42 100644
--- a/var/spack/repos/builtin/packages/gaudi/package.py
+++ b/var/spack/repos/builtin/packages/gaudi/package.py
@@ -51,6 +51,7 @@ class Gaudi(CMakePackage):
     patch("link_target_fixes.patch", when="@33.0:34")
     patch("link_target_fixes32.patch", when="@:32.2")
 
+    patch("tbb.patch")
     # These dependencies are needed for a minimal Gaudi build
     depends_on("aida")
     depends_on("boost@1.67.0: +python")
diff --git a/var/spack/repos/builtin/packages/gaudi/tbb.patch b/var/spack/repos/builtin/packages/gaudi/tbb.patch
new file mode 100644
index 00000000..2dc25968
--- /dev/null
+++ b/var/spack/repos/builtin/packages/gaudi/tbb.patch
@@ -0,0 +1,13 @@
+diff --git a/GaudiHive/src/AvalancheSchedulerSvc.cpp b/GaudiHive/src/AvalancheSchedulerSvc.cpp
+index 5bfff2f..166162f 100644
+--- a/GaudiHive/src/AvalancheSchedulerSvc.cpp
++++ b/GaudiHive/src/AvalancheSchedulerSvc.cpp
+@@ -33,8 +33,6 @@
+ #include "boost/algorithm/string.hpp"
+ #include "boost/thread.hpp"
+ #include "boost/tokenizer.hpp"
+-// DP waiting for the TBB service
+-#include "tbb/tbb_stddef.h"
+ 
+ // Instantiation of a static factory class used by clients to create instances of this service
+ DECLARE_COMPONENT( AvalancheSchedulerSvc )
