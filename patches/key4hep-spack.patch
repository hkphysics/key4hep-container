diff --git a/packages/kkmcee/package.py b/packages/kkmcee/package.py
index a673c5c..4f02816 100644
--- a/packages/kkmcee/package.py
+++ b/packages/kkmcee/package.py
@@ -26,7 +26,6 @@ class Kkmcee(AutotoolsPackage):
     depends_on('m4',       type='build')
     depends_on('root')
 
-    patch('gcc4.patch')
     patch('gcc6.patch')
     patch('gcc5.patch')
     patch('KKMCee-dev-4.30.patch', level=0, when='@:4.30')
diff --git a/packages/larcontent/package.py b/packages/larcontent/package.py
index 8a04639..30c5502 100644
--- a/packages/larcontent/package.py
+++ b/packages/larcontent/package.py
@@ -41,6 +41,8 @@ class Larcontent(CMakePackage):
         args = [
                 '-DCMAKE_MODULE_PATH=%s' % self.spec["pandorapfa"].prefix.cmakemodules,
                 "-DCMAKE_CXX_FLAGS=-std=c++17"]
+        if self.spec.satisfies('%clang'):
+            args.append('-DCMAKE_CXX_FLAGS=-Wno-error')
         return args
 
     def url_for_version(self, version):
diff --git a/packages/lccontent/package.py b/packages/lccontent/package.py
index 0161946..f7f47cd 100644
--- a/packages/lccontent/package.py
+++ b/packages/lccontent/package.py
@@ -36,6 +36,8 @@ class Lccontent(CMakePackage):
                 '-DCMAKE_CXX_STANDARD=17',
                 '-DCMAKE_MODULE_PATH=%s' % self.spec["pandorapfa"].prefix.cmakemodules
         ]
+        if self.spec.satisfies('%clang'):
+            args.append('-DCMAKE_CXX_FLAGS=-Wno-error')
         return args
 
     def url_for_version(self, version):
diff --git a/packages/k4fwcore/package.py b/packages/k4fwcore/package.py
index 14f8cc9..1132b8a 100644
--- a/packages/k4fwcore/package.py
+++ b/packages/k4fwcore/package.py
@@ -10,7 +10,7 @@ class K4fwcore(CMakePackage, Ilcsoftpackage):
 
     version('master', branch='master')
     k4_add_latest_commit_as_version(git)
-    version('1.0pre12', tag="v01-00pre12") 
+    version('1.0pre13', tag="v01-00pre13")
     version('0.2.0', sha256='7d1a6e7494f08c2b25901cab2138795f21b6c4e84f05c4f8b9a6839787874b72')
     version('0.1.1', sha256='9c4e4b487f7d9c982547c13570345399505e763fb369b76ceadb35c1d52bf6aa')
     version('0.1.0', sha256='aef682649f3fcb1d72de897fbf6ec4ed421c8a4836bb3462c4b0049a709374e4')
diff --git a/packages/fccanalyses/package.py b/packages/fccanalyses/package.py
index efdc97e..b968ba2 100644
--- a/packages/fccanalyses/package.py
+++ b/packages/fccanalyses/package.py
@@ -32,8 +32,9 @@ class Fccanalyses(CMakePackage, Key4hepPackage):
       spack_env.prepend_path('CPATH', self.spec['edm4hep'].prefix.include)
       spack_env.prepend_path('CPATH', self.spec['podio'].prefix.include)
       spack_env.prepend_path('CPATH', self.spec['fastjet'].prefix.include)
-      spack_env.prepend_path('CPATH', self.spec['acts'].prefix.include)
-      spack_env.prepend_path('CPATH', self.spec['eigen'].prefix.include)
+      if spec.satisfies("@0.3.0:"):
+        spack_env.prepend_path('CPATH', self.spec['acts'].prefix.include)
+        spack_env.prepend_path('CPATH', self.spec['eigen'].prefix.include)
 
     def setup_run_environment(self, spack_env):
       spack_env.prepend_path('ROOT_INCLUDE_PATH', self.prefix.include.FCCAnalyses)
@@ -41,3 +42,9 @@ class Fccanalyses(CMakePackage, Key4hepPackage):
       # this should point to share/ by key4hep convention
       #  but we want to make it work with the tutorials
       spack_env.set("FCCANALYSES", self.prefix.python)
+
+    def cmake_args(self):
+        return [
+            self.define('CMAKE_CXX_STANDARD',
+                        self.spec['root'].variants['cxxstd'].value)
+        ]
