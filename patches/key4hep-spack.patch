diff --git a/packages/lccontent/package.py b/packages/lccontent/package.py
index 0161946..f7f47cd 100644
--- a/packages/lccontent/package.py
+++ b/packages/lccontent/package.py
@@ -36,6 +36,8 @@ class Lccontent(CMakePackage):
                 '-DCMAKE_CXX_STANDARD=17',
                 '-DCMAKE_MODULE_PATH=%s' % self.spec["pandorapfa"].prefix.cmakemodules
         ]
+        if self.spec.satisfies('%clang'):
+            args.append('-DCMAKE_CXX_FLAGS=-Wno-error')
         return args
 
     def url_for_version(self, version):
diff --git a/packages/fccanalyses/package.py b/packages/fccanalyses/package.py
index efdc97e..b968ba2 100644
--- a/packages/fccanalyses/package.py
+++ b/packages/fccanalyses/package.py
@@ -32,8 +32,9 @@ class Fccanalyses(CMakePackage, Key4hepPackage):
       spack_env.prepend_path('CPATH', self.spec['edm4hep'].prefix.include)
       spack_env.prepend_path('CPATH', self.spec['podio'].prefix.include)
       spack_env.prepend_path('CPATH', self.spec['fastjet'].prefix.include)
-      spack_env.prepend_path('CPATH', self.spec['acts'].prefix.include)
-      spack_env.prepend_path('CPATH', self.spec['eigen'].prefix.include)
+      if self.spec.satisfies("@0.3.0:"):
+        spack_env.prepend_path('CPATH', self.spec['acts'].prefix.include)
+        spack_env.prepend_path('CPATH', self.spec['eigen'].prefix.include)
 
     def setup_run_environment(self, spack_env):
       spack_env.prepend_path('ROOT_INCLUDE_PATH', self.prefix.include.FCCAnalyses)
@@ -41,3 +42,9 @@ class Fccanalyses(CMakePackage, Key4hepPackage):
       # this should point to share/ by key4hep convention
       #  but we want to make it work with the tutorials
       spack_env.set("FCCANALYSES", self.prefix.python)
+
+    def cmake_args(self):
+        return [
+            self.define('CMAKE_CXX_STANDARD',
+                        self.spec['root'].variants['cxxstd'].value)
+        ]
diff --git a/packages/cepcsw/package.py b/packages/cepcsw/package.py
index 08f17da..653be1e 100644
--- a/packages/cepcsw/package.py
+++ b/packages/cepcsw/package.py
@@ -29,7 +29,7 @@ class Cepcsw(CMakePackage, Key4hepPackage):
           sha256='87bf94536f5fd7fb675ca4eff25277331b7de94ef541f2bd8ea178a5e61fd20d', when="@0.2.1")
 
     depends_on('clhep')
-    depends_on('dd4hep +geant4')
+    depends_on('dd4hep')
     depends_on('edm4hep')
     depends_on('k4fwcore@0.3.0:', when='@0.2:')
     depends_on('k4fwcore@0.2.0', when='@:0.1.99')
diff --git a/packages/dual-readout/package.py b/packages/dual-readout/package.py
index 2b18b39..acf434b 100644
--- a/packages/dual-readout/package.py
+++ b/packages/dual-readout/package.py
@@ -20,7 +20,7 @@ class DualReadout(CMakePackage, Key4hepPackage):
     version('0.0.3', sha256='d35e7193c11385505494f11328d54a595b3ff953563bae06b8954c1ef24209b3')
     version('0.0.2', sha256='f76c1febf3d8e29d5287ba03eacbc244f8c615502295f7471579245376da91ad')
 
-    depends_on('dd4hep+geant4')
+    depends_on('dd4hep')
     depends_on('hepmc3+rootio')
     depends_on('fccsw')
     depends_on('fastjet')
diff --git a/packages/fccdetectors/package.py b/packages/fccdetectors/package.py
index c12aab9..94e03e1 100644
--- a/packages/fccdetectors/package.py
+++ b/packages/fccdetectors/package.py
@@ -21,7 +21,7 @@ class Fccdetectors(CMakePackage, Key4hepPackage):
             multi=False,
             description='Use the specified C++ standard when building.')
 
-    depends_on('dd4hep +geant4')
+    depends_on('dd4hep')
     depends_on('lcgeo')
     depends_on('lcio')
 
diff --git a/packages/k4pandora/package.py b/packages/k4pandora/package.py
index 0b6c943..c71134e 100644
--- a/packages/k4pandora/package.py
+++ b/packages/k4pandora/package.py
@@ -26,7 +26,7 @@ class K4pandora(CMakePackage, Key4hepPackage):
     version('master', branch='master')
 
     depends_on('clhep')
-    depends_on('dd4hep +geant4')
+    depends_on('dd4hep')
     depends_on('edm4hep')
     depends_on('k4fwcore@0.3.0:')
     depends_on('gaudi@35.0:')
diff --git a/packages/k4reccalorimeter/package.py b/packages/k4reccalorimeter/package.py
index 3b83ecf..0e56df7 100644
--- a/packages/k4reccalorimeter/package.py
+++ b/packages/k4reccalorimeter/package.py
@@ -27,7 +27,7 @@ class K4reccalorimeter(CMakePackage, Key4hepPackage):
     depends_on('ninja', type='build')
     depends_on("edm4hep")
     depends_on('k4fwcore@1:')
-    depends_on("dd4hep +geant4")
+    depends_on("dd4hep")
     depends_on("fccdetectors")
 
     # todo: remove when ready
diff --git a/packages/k4simgeant4/package.py b/packages/k4simgeant4/package.py
index 199af36..1357d2d 100644
--- a/packages/k4simgeant4/package.py
+++ b/packages/k4simgeant4/package.py
@@ -19,7 +19,7 @@ class K4simgeant4(CMakePackage, Key4hepPackage):
             description='Use the specified C++ standard when building.')
 
     depends_on('clhep')
-    depends_on('dd4hep +geant4')
+    depends_on('dd4hep')
     depends_on('k4fwcore@1.0:')
     depends_on('geant4')
     depends_on('edm4hep')
diff --git a/packages/lcgeo/package.py b/packages/lcgeo/package.py
index 6319ad4..da39bea 100644
--- a/packages/lcgeo/package.py
+++ b/packages/lcgeo/package.py
@@ -27,7 +27,7 @@ class Lcgeo(CMakePackage, Ilcsoftpackage):
             description='Use the specified C++ standard when building.')
 
     depends_on('lcio')
-    depends_on('dd4hep +geant4')
+    depends_on('dd4hep')
     depends_on('boost')
     depends_on('root')
 
diff --git a/packages/ced/glut-link.patch b/packages/ced/glut-link.patch
new file mode 100644
index 0000000..5963ef3
--- /dev/null
+++ b/packages/ced/glut-link.patch
@@ -0,0 +1,15 @@
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index 504edf4..d7cb4c4 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -62,7 +62,9 @@ INSTALL_SHARED_LIBRARY( CED DESTINATION lib )
+ 
+ # link CED client library to the math library
+ FIND_LIBRARY( c_math_lib NAMES m )
+-TARGET_LINK_LIBRARIES( CED ${c_math_lib} )
++FIND_LIBRARY( glut_lib NAMES glut )
++TARGET_LINK_LIBRARIES( CED ${glut_lib} ${c_math_lib} )
++MARK_AS_ADVANCED( glut_lib )
+ MARK_AS_ADVANCED( c_math_lib )
+ 
+ 
diff --git a/packages/ced/package.py b/packages/ced/package.py
index fecccca..f9bd841 100644
--- a/packages/ced/package.py
+++ b/packages/ced/package.py
@@ -30,6 +30,7 @@ class Ced(CMakePackage, Ilcsoftpackage):
 
     depends_on('freeglut')
     depends_on('ilcutil')
+    patch('glut-link.patch')
 
     def cmake_args(self):
         # install error if build_testing is on
diff --git a/packages/larcontent/package.py b/packages/larcontent/package.py
index 60cc4f3..0707d87 100644
--- a/packages/larcontent/package.py
+++ b/packages/larcontent/package.py
@@ -39,7 +39,7 @@ class Larcontent(CMakePackage):
     def cmake_args(self):
         args = [
                 '-DCMAKE_MODULE_PATH=%s' % self.spec["pandorapfa"].prefix.cmakemodules,
-                "-DCMAKE_CXX_FLAGS=-std=c++17 -Wno-unused-private-field"]
+                "-DCMAKE_CXX_FLAGS=-std=c++17 -Wno-unused-private-field -Wno-unused-but-set-variable"]
         return args
 
     def url_for_version(self, version):
